#!/bin/sh

COMMON_SOURCED="true"

# Colored echo lines
function echolor {
    local color=$1;
    local exp=$2;
    if ! [[ $color =~ '^[0-9]$' ]] ; then
        case $(echo $color | tr '[:upper:]' '[:lower:]') in
            black)      color=0 ;;
            red)        color=1 ;;
            green)      color=2 ;;
            yellow)     color=3 ;;
            blue)       color=4 ;;
            magenta)    color=5 ;;
            cyan)       color=6 ;;
            white|*)    color=7 ;;  # white or invalid color
        esac
    fi
    tput setaf $color;  # set foregraund color
    echo "$exp";
    tput sgr0;          # reset foreground color
}

# Right-aligned label (or left pad)
function ralign {
    local DEFAULT_PADDING=25
    local opt_padding=$DEFAULT_PADDING
    local opt_string=""
    while getopts p:s: opt; do
        case $opt in
            p) opt_padding=$OPTARG ;;
            s) opt_string=$OPTARG ;;
        esac
    done
    local padding=$(($opt_padding-${#opt_string}))
    printf '%*s' "$padding"
    [[ -n $opt_string ]] && echo "$opt_string"
}

# Helper to extract app name (if app is renamed, then will cause problems in run-uc-local!)
function get_app_info() {
    local get_app_cmd="lsappinfo info -only name `lsappinfo front`"
    local app_cmd=$(eval $get_app_cmd)
    app_cmd=${app_cmd#*\"=\"}
    app_cmd=${app_cmd%%\"}
    echo $app_cmd
}

function gu {
    local dir_ucf_base="$HOME/development/uc-frontend"
    local dir_apps="$dir_ucf_base/apps"

    local default_app="video-studio"
    local app_name="$default_app"
    if [[ -n "$1" ]];
    then
        app_name="$1"
    fi
    cd "$dir_apps/$app_name"
}
